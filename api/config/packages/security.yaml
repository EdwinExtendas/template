security:
    encoders:
        App\Entity\AppUser:
            algorithm: bcrypt
        App\Entity\PortalUser:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        chain_provider:
            chain:
                providers: [app_user_provider, portal_user_provider]
        app_user_provider:
            entity:
                class: App\Entity\AppUser
        portal_user_provider:
            entity:
                class: App\Entity\PortalUser

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern:   ^/api
            stateless: true
            provider: chain_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\ApiAuthenticator
                entry_point: lexik_jwt_authentication.jwt_token_authenticator

        base:
            pattern:  ^/
            stateless: true
            anonymous: true
            provider: chain_provider
            json_login:
                check_path: /token/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
#        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
